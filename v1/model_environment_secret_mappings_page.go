/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// EnvironmentSecretMappingsPage struct for EnvironmentSecretMappingsPage
type EnvironmentSecretMappingsPage struct {
	Pageable *Pageable `json:"pageable,omitempty"`
	Metadata *EnvironmentSecretMappingsPageMetadata `json:"metadata,omitempty"`
	Items *[]EnvironmentSecretMapping `json:"items,omitempty"`
}

// NewEnvironmentSecretMappingsPage instantiates a new EnvironmentSecretMappingsPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentSecretMappingsPage() *EnvironmentSecretMappingsPage {
	this := EnvironmentSecretMappingsPage{}
	return &this
}

// NewEnvironmentSecretMappingsPageWithDefaults instantiates a new EnvironmentSecretMappingsPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentSecretMappingsPageWithDefaults() *EnvironmentSecretMappingsPage {
	this := EnvironmentSecretMappingsPage{}
	return &this
}

// GetPageable returns the Pageable field value if set, zero value otherwise.
func (o *EnvironmentSecretMappingsPage) GetPageable() Pageable {
	if o == nil || o.Pageable == nil {
		var ret Pageable
		return ret
	}
	return *o.Pageable
}

// GetPageableOk returns a tuple with the Pageable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretMappingsPage) GetPageableOk() (*Pageable, bool) {
	if o == nil || o.Pageable == nil {
		return nil, false
	}
	return o.Pageable, true
}

// HasPageable returns a boolean if a field has been set.
func (o *EnvironmentSecretMappingsPage) HasPageable() bool {
	if o != nil && o.Pageable != nil {
		return true
	}

	return false
}

// SetPageable gets a reference to the given Pageable and assigns it to the Pageable field.
func (o *EnvironmentSecretMappingsPage) SetPageable(v Pageable) {
	o.Pageable = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *EnvironmentSecretMappingsPage) GetMetadata() EnvironmentSecretMappingsPageMetadata {
	if o == nil || o.Metadata == nil {
		var ret EnvironmentSecretMappingsPageMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretMappingsPage) GetMetadataOk() (*EnvironmentSecretMappingsPageMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EnvironmentSecretMappingsPage) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given EnvironmentSecretMappingsPageMetadata and assigns it to the Metadata field.
func (o *EnvironmentSecretMappingsPage) SetMetadata(v EnvironmentSecretMappingsPageMetadata) {
	o.Metadata = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *EnvironmentSecretMappingsPage) GetItems() []EnvironmentSecretMapping {
	if o == nil || o.Items == nil {
		var ret []EnvironmentSecretMapping
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretMappingsPage) GetItemsOk() (*[]EnvironmentSecretMapping, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *EnvironmentSecretMappingsPage) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []EnvironmentSecretMapping and assigns it to the Items field.
func (o *EnvironmentSecretMappingsPage) SetItems(v []EnvironmentSecretMapping) {
	o.Items = &v
}

func (o EnvironmentSecretMappingsPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pageable != nil {
		toSerialize["pageable"] = o.Pageable
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentSecretMappingsPage struct {
	value *EnvironmentSecretMappingsPage
	isSet bool
}

func (v NullableEnvironmentSecretMappingsPage) Get() *EnvironmentSecretMappingsPage {
	return v.value
}

func (v *NullableEnvironmentSecretMappingsPage) Set(val *EnvironmentSecretMappingsPage) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentSecretMappingsPage) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentSecretMappingsPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentSecretMappingsPage(val *EnvironmentSecretMappingsPage) *NullableEnvironmentSecretMappingsPage {
	return &NullableEnvironmentSecretMappingsPage{value: val, isSet: true}
}

func (v NullableEnvironmentSecretMappingsPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentSecretMappingsPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


