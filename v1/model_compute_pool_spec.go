/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ComputePoolSpec Spec for ComputePool
type ComputePoolSpec struct {
	// Type of the ComputePool
	Type string `json:"type"`
	// Cluster Spec
	ClusterSpec map[string]interface{} `json:"clusterSpec"`
}

// NewComputePoolSpec instantiates a new ComputePoolSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputePoolSpec(type_ string, clusterSpec map[string]interface{}) *ComputePoolSpec {
	this := ComputePoolSpec{}
	this.Type = type_
	this.ClusterSpec = clusterSpec
	return &this
}

// NewComputePoolSpecWithDefaults instantiates a new ComputePoolSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputePoolSpecWithDefaults() *ComputePoolSpec {
	this := ComputePoolSpec{}
	return &this
}

// GetType returns the Type field value
func (o *ComputePoolSpec) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ComputePoolSpec) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ComputePoolSpec) SetType(v string) {
	o.Type = v
}

// GetClusterSpec returns the ClusterSpec field value
func (o *ComputePoolSpec) GetClusterSpec() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ClusterSpec
}

// GetClusterSpecOk returns a tuple with the ClusterSpec field value
// and a boolean to check if the value has been set.
func (o *ComputePoolSpec) GetClusterSpecOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClusterSpec, true
}

// SetClusterSpec sets field value
func (o *ComputePoolSpec) SetClusterSpec(v map[string]interface{}) {
	o.ClusterSpec = v
}

func (o ComputePoolSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["clusterSpec"] = o.ClusterSpec
	}
	return json.Marshal(toSerialize)
}

type NullableComputePoolSpec struct {
	value *ComputePoolSpec
	isSet bool
}

func (v NullableComputePoolSpec) Get() *ComputePoolSpec {
	return v.value
}

func (v *NullableComputePoolSpec) Set(val *ComputePoolSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComputePoolSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComputePoolSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputePoolSpec(val *ComputePoolSpec) *NullableComputePoolSpec {
	return &NullableComputePoolSpec{value: val, isSet: true}
}

func (v NullableComputePoolSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputePoolSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


