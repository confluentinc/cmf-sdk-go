/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"time"
)

// GetResourceBase struct for GetResourceBase
type GetResourceBase struct {
	CreatedTime *time.Time `json:"created_time,omitempty"`
	UpdatedTime *time.Time `json:"updated_time,omitempty"`
}

// NewGetResourceBase instantiates a new GetResourceBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResourceBase() *GetResourceBase {
	this := GetResourceBase{}
	return &this
}

// NewGetResourceBaseWithDefaults instantiates a new GetResourceBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResourceBaseWithDefaults() *GetResourceBase {
	this := GetResourceBase{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *GetResourceBase) GetCreatedTime() time.Time {
	if o == nil || o.CreatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResourceBase) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedTime == nil {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *GetResourceBase) HasCreatedTime() bool {
	if o != nil && o.CreatedTime != nil {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *GetResourceBase) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *GetResourceBase) GetUpdatedTime() time.Time {
	if o == nil || o.UpdatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResourceBase) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdatedTime == nil {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *GetResourceBase) HasUpdatedTime() bool {
	if o != nil && o.UpdatedTime != nil {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *GetResourceBase) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

func (o GetResourceBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedTime != nil {
		toSerialize["created_time"] = o.CreatedTime
	}
	if o.UpdatedTime != nil {
		toSerialize["updated_time"] = o.UpdatedTime
	}
	return json.Marshal(toSerialize)
}

type NullableGetResourceBase struct {
	value *GetResourceBase
	isSet bool
}

func (v NullableGetResourceBase) Get() *GetResourceBase {
	return v.value
}

func (v *NullableGetResourceBase) Set(val *GetResourceBase) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResourceBase) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResourceBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResourceBase(val *GetResourceBase) *NullableGetResourceBase {
	return &NullableGetResourceBase{value: val, isSet: true}
}

func (v NullableGetResourceBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResourceBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


