/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ApplicationInstanceStatusJobStatus struct for ApplicationInstanceStatusJobStatus
type ApplicationInstanceStatusJobStatus struct {
	// Flink job id inside the Flink cluster
	JobId *string `json:"jobId,omitempty"`
	// Tracks the final Flink JobStatus of the instance
	State *string `json:"state,omitempty"`
}

// NewApplicationInstanceStatusJobStatus instantiates a new ApplicationInstanceStatusJobStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationInstanceStatusJobStatus() *ApplicationInstanceStatusJobStatus {
	this := ApplicationInstanceStatusJobStatus{}
	return &this
}

// NewApplicationInstanceStatusJobStatusWithDefaults instantiates a new ApplicationInstanceStatusJobStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationInstanceStatusJobStatusWithDefaults() *ApplicationInstanceStatusJobStatus {
	this := ApplicationInstanceStatusJobStatus{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *ApplicationInstanceStatusJobStatus) GetJobId() string {
	if o == nil || o.JobId == nil {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationInstanceStatusJobStatus) GetJobIdOk() (*string, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *ApplicationInstanceStatusJobStatus) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *ApplicationInstanceStatusJobStatus) SetJobId(v string) {
	o.JobId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ApplicationInstanceStatusJobStatus) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationInstanceStatusJobStatus) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ApplicationInstanceStatusJobStatus) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ApplicationInstanceStatusJobStatus) SetState(v string) {
	o.State = &v
}

func (o ApplicationInstanceStatusJobStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobId != nil {
		toSerialize["jobId"] = o.JobId
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationInstanceStatusJobStatus struct {
	value *ApplicationInstanceStatusJobStatus
	isSet bool
}

func (v NullableApplicationInstanceStatusJobStatus) Get() *ApplicationInstanceStatusJobStatus {
	return v.value
}

func (v *NullableApplicationInstanceStatusJobStatus) Set(val *ApplicationInstanceStatusJobStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationInstanceStatusJobStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationInstanceStatusJobStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationInstanceStatusJobStatus(val *ApplicationInstanceStatusJobStatus) *NullableApplicationInstanceStatusJobStatus {
	return &NullableApplicationInstanceStatusJobStatus{value: val, isSet: true}
}

func (v NullableApplicationInstanceStatusJobStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationInstanceStatusJobStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


