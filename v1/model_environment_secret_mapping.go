/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// EnvironmentSecretMapping The secrets mapping for the environment. The name shows the name of the Connection Secret ID to be mapped.
type EnvironmentSecretMapping struct {
	ApiVersion string `json:"apiVersion"`
	Kind string `json:"kind"`
	Metadata *EnvironmentSecretMappingMetadata `json:"metadata,omitempty"`
	Spec *EnvironmentSecretMappingSpec `json:"spec,omitempty"`
}

// NewEnvironmentSecretMapping instantiates a new EnvironmentSecretMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentSecretMapping(apiVersion string, kind string) *EnvironmentSecretMapping {
	this := EnvironmentSecretMapping{}
	this.ApiVersion = apiVersion
	this.Kind = kind
	return &this
}

// NewEnvironmentSecretMappingWithDefaults instantiates a new EnvironmentSecretMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentSecretMappingWithDefaults() *EnvironmentSecretMapping {
	this := EnvironmentSecretMapping{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *EnvironmentSecretMapping) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretMapping) GetApiVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *EnvironmentSecretMapping) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetKind returns the Kind field value
func (o *EnvironmentSecretMapping) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretMapping) GetKindOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *EnvironmentSecretMapping) SetKind(v string) {
	o.Kind = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *EnvironmentSecretMapping) GetMetadata() EnvironmentSecretMappingMetadata {
	if o == nil || o.Metadata == nil {
		var ret EnvironmentSecretMappingMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretMapping) GetMetadataOk() (*EnvironmentSecretMappingMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EnvironmentSecretMapping) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given EnvironmentSecretMappingMetadata and assigns it to the Metadata field.
func (o *EnvironmentSecretMapping) SetMetadata(v EnvironmentSecretMappingMetadata) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *EnvironmentSecretMapping) GetSpec() EnvironmentSecretMappingSpec {
	if o == nil || o.Spec == nil {
		var ret EnvironmentSecretMappingSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretMapping) GetSpecOk() (*EnvironmentSecretMappingSpec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *EnvironmentSecretMapping) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given EnvironmentSecretMappingSpec and assigns it to the Spec field.
func (o *EnvironmentSecretMapping) SetSpec(v EnvironmentSecretMappingSpec) {
	o.Spec = &v
}

func (o EnvironmentSecretMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentSecretMapping struct {
	value *EnvironmentSecretMapping
	isSet bool
}

func (v NullableEnvironmentSecretMapping) Get() *EnvironmentSecretMapping {
	return v.value
}

func (v *NullableEnvironmentSecretMapping) Set(val *EnvironmentSecretMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentSecretMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentSecretMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentSecretMapping(val *EnvironmentSecretMapping) *NullableEnvironmentSecretMapping {
	return &NullableEnvironmentSecretMapping{value: val, isSet: true}
}

func (v NullableEnvironmentSecretMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentSecretMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


