/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ApplicationPageMetadata struct for ApplicationPageMetadata
type ApplicationPageMetadata struct {
	Size *int64 `json:"size,omitempty"`
}

// NewApplicationPageMetadata instantiates a new ApplicationPageMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationPageMetadata() *ApplicationPageMetadata {
	this := ApplicationPageMetadata{}
	var size int64 = 0
	this.Size = &size
	return &this
}

// NewApplicationPageMetadataWithDefaults instantiates a new ApplicationPageMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationPageMetadataWithDefaults() *ApplicationPageMetadata {
	this := ApplicationPageMetadata{}
	var size int64 = 0
	this.Size = &size
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ApplicationPageMetadata) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationPageMetadata) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ApplicationPageMetadata) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *ApplicationPageMetadata) SetSize(v int64) {
	o.Size = &v
}

func (o ApplicationPageMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationPageMetadata struct {
	value *ApplicationPageMetadata
	isSet bool
}

func (v NullableApplicationPageMetadata) Get() *ApplicationPageMetadata {
	return v.value
}

func (v *NullableApplicationPageMetadata) Set(val *ApplicationPageMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationPageMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationPageMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationPageMetadata(val *ApplicationPageMetadata) *NullableApplicationPageMetadata {
	return &NullableApplicationPageMetadata{value: val, isSet: true}
}

func (v NullableApplicationPageMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationPageMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


