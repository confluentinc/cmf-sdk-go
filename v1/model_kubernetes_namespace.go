/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// KubernetesNamespace struct for KubernetesNamespace
type KubernetesNamespace struct {
	KubernetesNamespace *string `json:"kubernetesNamespace,omitempty"`
}

// NewKubernetesNamespace instantiates a new KubernetesNamespace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesNamespace() *KubernetesNamespace {
	this := KubernetesNamespace{}
	return &this
}

// NewKubernetesNamespaceWithDefaults instantiates a new KubernetesNamespace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesNamespaceWithDefaults() *KubernetesNamespace {
	this := KubernetesNamespace{}
	return &this
}

// GetKubernetesNamespace returns the KubernetesNamespace field value if set, zero value otherwise.
func (o *KubernetesNamespace) GetKubernetesNamespace() string {
	if o == nil || o.KubernetesNamespace == nil {
		var ret string
		return ret
	}
	return *o.KubernetesNamespace
}

// GetKubernetesNamespaceOk returns a tuple with the KubernetesNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNamespace) GetKubernetesNamespaceOk() (*string, bool) {
	if o == nil || o.KubernetesNamespace == nil {
		return nil, false
	}
	return o.KubernetesNamespace, true
}

// HasKubernetesNamespace returns a boolean if a field has been set.
func (o *KubernetesNamespace) HasKubernetesNamespace() bool {
	if o != nil && o.KubernetesNamespace != nil {
		return true
	}

	return false
}

// SetKubernetesNamespace gets a reference to the given string and assigns it to the KubernetesNamespace field.
func (o *KubernetesNamespace) SetKubernetesNamespace(v string) {
	o.KubernetesNamespace = &v
}

func (o KubernetesNamespace) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KubernetesNamespace != nil {
		toSerialize["kubernetesNamespace"] = o.KubernetesNamespace
	}
	return json.Marshal(toSerialize)
}

type NullableKubernetesNamespace struct {
	value *KubernetesNamespace
	isSet bool
}

func (v NullableKubernetesNamespace) Get() *KubernetesNamespace {
	return v.value
}

func (v *NullableKubernetesNamespace) Set(val *KubernetesNamespace) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesNamespace) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesNamespace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesNamespace(val *KubernetesNamespace) *NullableKubernetesNamespace {
	return &NullableKubernetesNamespace{value: val, isSet: true}
}

func (v NullableKubernetesNamespace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesNamespace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


