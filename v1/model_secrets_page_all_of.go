/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// SecretsPageAllOf struct for SecretsPageAllOf
type SecretsPageAllOf struct {
	Metadata *SecretsPageMetadata `json:"metadata,omitempty"`
	Items *[]Secret `json:"items,omitempty"`
}

// NewSecretsPageAllOf instantiates a new SecretsPageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsPageAllOf() *SecretsPageAllOf {
	this := SecretsPageAllOf{}
	return &this
}

// NewSecretsPageAllOfWithDefaults instantiates a new SecretsPageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsPageAllOfWithDefaults() *SecretsPageAllOf {
	this := SecretsPageAllOf{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SecretsPageAllOf) GetMetadata() SecretsPageMetadata {
	if o == nil || o.Metadata == nil {
		var ret SecretsPageMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPageAllOf) GetMetadataOk() (*SecretsPageMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SecretsPageAllOf) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SecretsPageMetadata and assigns it to the Metadata field.
func (o *SecretsPageAllOf) SetMetadata(v SecretsPageMetadata) {
	o.Metadata = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *SecretsPageAllOf) GetItems() []Secret {
	if o == nil || o.Items == nil {
		var ret []Secret
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPageAllOf) GetItemsOk() (*[]Secret, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *SecretsPageAllOf) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Secret and assigns it to the Items field.
func (o *SecretsPageAllOf) SetItems(v []Secret) {
	o.Items = &v
}

func (o SecretsPageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableSecretsPageAllOf struct {
	value *SecretsPageAllOf
	isSet bool
}

func (v NullableSecretsPageAllOf) Get() *SecretsPageAllOf {
	return v.value
}

func (v *NullableSecretsPageAllOf) Set(val *SecretsPageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsPageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsPageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsPageAllOf(val *SecretsPageAllOf) *NullableSecretsPageAllOf {
	return &NullableSecretsPageAllOf{value: val, isSet: true}
}

func (v NullableSecretsPageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsPageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


