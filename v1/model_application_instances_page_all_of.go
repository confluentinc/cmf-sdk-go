/*
Confluent Manager for Apache Flink / CMF

Apache Flink job lifecycle management component for Confluent Platform.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// ApplicationInstancesPageAllOf struct for ApplicationInstancesPageAllOf
type ApplicationInstancesPageAllOf struct {
	Metadata *ApplicationInstancesPageMetadata `json:"metadata,omitempty"`
	Items *[]FlinkApplicationInstance `json:"items,omitempty"`
}

// NewApplicationInstancesPageAllOf instantiates a new ApplicationInstancesPageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationInstancesPageAllOf() *ApplicationInstancesPageAllOf {
	this := ApplicationInstancesPageAllOf{}
	return &this
}

// NewApplicationInstancesPageAllOfWithDefaults instantiates a new ApplicationInstancesPageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationInstancesPageAllOfWithDefaults() *ApplicationInstancesPageAllOf {
	this := ApplicationInstancesPageAllOf{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ApplicationInstancesPageAllOf) GetMetadata() ApplicationInstancesPageMetadata {
	if o == nil || o.Metadata == nil {
		var ret ApplicationInstancesPageMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationInstancesPageAllOf) GetMetadataOk() (*ApplicationInstancesPageMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ApplicationInstancesPageAllOf) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ApplicationInstancesPageMetadata and assigns it to the Metadata field.
func (o *ApplicationInstancesPageAllOf) SetMetadata(v ApplicationInstancesPageMetadata) {
	o.Metadata = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ApplicationInstancesPageAllOf) GetItems() []FlinkApplicationInstance {
	if o == nil || o.Items == nil {
		var ret []FlinkApplicationInstance
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationInstancesPageAllOf) GetItemsOk() (*[]FlinkApplicationInstance, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ApplicationInstancesPageAllOf) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []FlinkApplicationInstance and assigns it to the Items field.
func (o *ApplicationInstancesPageAllOf) SetItems(v []FlinkApplicationInstance) {
	o.Items = &v
}

func (o ApplicationInstancesPageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationInstancesPageAllOf struct {
	value *ApplicationInstancesPageAllOf
	isSet bool
}

func (v NullableApplicationInstancesPageAllOf) Get() *ApplicationInstancesPageAllOf {
	return v.value
}

func (v *NullableApplicationInstancesPageAllOf) Set(val *ApplicationInstancesPageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationInstancesPageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationInstancesPageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationInstancesPageAllOf(val *ApplicationInstancesPageAllOf) *NullableApplicationInstancesPageAllOf {
	return &NullableApplicationInstancesPageAllOf{value: val, isSet: true}
}

func (v NullableApplicationInstancesPageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationInstancesPageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


